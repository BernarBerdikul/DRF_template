# Generated by Django 3.1.5 on 2021-02-03 19:56

from django.db import migrations, models
import virtual_day.utils.image_utils
import virtual_day.utils.validators


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Время создания')),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='Время последнего изменения')),
                ('login', models.CharField(max_length=255, unique=True)),
                ('avatar', models.ImageField(blank=True, null=True, upload_to=virtual_day.utils.image_utils.avatar_path)),
                ('first_name', models.CharField(max_length=255)),
                ('last_name', models.CharField(max_length=255)),
                ('role', models.PositiveSmallIntegerField(choices=[(0, 'STUDENT'), (1, 'ADMIN')], default=0)),
                ('email', models.EmailField(blank=True, max_length=255, null=True)),
                ('phone', models.CharField(max_length=255, unique=True, validators=[virtual_day.utils.validators.validate_phone_number])),
                ('password_changed_datetime', models.DateTimeField(editable=False, null=True)),
                ('is_admin', models.BooleanField(default=False, verbose_name='Админ')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активность')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
            },
        ),
    ]
